name: Build Oplus Ace5 KernelSU Next SUSFS with TCP BBR

on:
  workflow_dispatch:
    inputs:
      CPU:
        description: "分支"
        required: true
        default: 'sm8650'
      FEIL:
        description: "配置文件"
        required: true
        default: 'oneplus_ace5'
      CPUD:
        description: "处理器代号"
        required: true
        default: 'pineapple'
      ANDROID_VERSION:
        description: "内核安卓版本"
        required: true
        default: 'android14'
      KERNEL_VERSION:
        description: "内核版本"
        required: true
        default: '6.1'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 8192
          temp-reserve-mb: 2048
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
          remove-codeql: 'true'

      - name: Configure Git
        run: |
          git config --global user.name "build"
          git config --global user.email "543069760@qq.com"

      - name: Install dependencies
        run: |
          sudo apt update && sudo apt upgrade -y
          sudo apt install -y python3 git curl bc build-essential flex bison libssl-dev

      - name: Install repo tool
        run: |
          curl https://storage.googleapis.com/git-repo-downloads/repo > ~/repo
          chmod a+x ~/repo
          sudo mv ~/repo /usr/bin/repo
          which repo || { echo "Error: repo not found"; exit 1; }

      - name: Initialize repo and sync
        run: |
          mkdir kernel_workspace && cd kernel_workspace
          repo init -u https://github.com/543069760/kernel_manifest.git \
            -b refs/heads/oneplus/${{ github.event.inputs.CPU }} \
            -m ${{ github.event.inputs.FEIL }}.xml \
            --depth=1
          repo sync -j$(nproc) --force-sync --no-clone-bundle
          find . -name setlocalversion -exec sed -i 's/ -dirty//g' {} +

      - name: Set up KernelSU Next
        run: |
          cd kernel_workspace/kernel_platform
          curl -LSs "https://raw.githubusercontent.com/rifsxd/KernelSU-Next/next/kernel/setup.sh" | bash -s next
          cd KernelSU-Next
          KSU_VERSION=$(expr $(git rev-list --count HEAD) + 10200)
          echo "KSUVER=$KSU_VERSION" >> $GITHUB_ENV
          sed -i "s/DKSU_VERSION=16/DKSU_VERSION=${KSU_VERSION}/" kernel/Makefile

      - name: Set up susfs
        run: |
          cd kernel_workspace
          git clone https://gitlab.com/simonpunk/susfs4ksu.git -b gki-${{ github.event.inputs.ANDROID_VERSION }}-${{ github.event.inputs.KERNEL_VERSION }}
          git clone https://github.com/TheWildJames/kernel_patches.git
          cd kernel_platform
          cp ../susfs4ksu/kernel_patches/KernelSU/10_enable_susfs_for_ksu.patch ./KernelSU-Next/
          cp ../susfs4ksu/kernel_patches/50_add_susfs_in_gki-${{ github.event.inputs.ANDROID_VERSION }}-${{ github.event.inputs.KERNEL_VERSION }}.patch ./common/
          cd KernelSU-Next
          patch -p1 --forward < 10_enable_susfs_for_ksu.patch || true
          cd ../common
          patch -p1 < 50_add_susfs_in_gki-${{ github.event.inputs.ANDROID_VERSION }}-${{ github.event.inputs.KERNEL_VERSION }}.patch || true
          patch -p1 < ../../kernel_patches/69_hide_stuff.patch
          git add -A && git commit -m "BUILD: Apply SUSFS patches"

      - name: Merge BBR v3 into kernel
        run: |
          cd kernel_workspace/kernel_platform
          git remote add google-bbr https://github.com/google/bbr.git
          git fetch google-bbr
          git show-ref --verify --quiet refs/remotes/google-bbr/v3 || { echo "Error: google-bbr/v3 branch not found"; exit 1; }
          git merge google-bbr/v3 --allow-unrelated-histories -m "Merge BBR v3 into kernel"

      - name: Check and enable BBR v3 in kernel config
        run: |
          cd kernel_workspace/kernel_platform/common/arch/arm64/configs

          # 确保 gki_defconfig 存在
          CONFIG_PATH="./gki_defconfig"
          if [ ! -f "$CONFIG_PATH" ]; then
            echo "Error: $CONFIG_PATH not found!"
            exit 1
          fi
          echo "Using CONFIG_PATH: $CONFIG_PATH"

          # 修改配置
          sed -i '/CONFIG_TCP_CONG_BBR/d' $CONFIG_PATH
          echo "CONFIG_TCP_CONG_BBR=y" >> $CONFIG_PATH
          echo "CONFIG_DEFAULT_TCP_CONG=\"bbr\"" >> $CONFIG_PATH

          # 重新初始化环境
          cd ../../../../
          export ARCH=arm64
          export CROSS_COMPILE=aarch64-linux-gnu-
          source msm-kernel/build.config.gki
          
          # 运行 savedefconfig
          make O=out/android14-6.1 ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- savedefconfig || { echo "Error: savedefconfig failed"; exit 1; }

          # 确保修改生效
          diff <(grep CONFIG_TCP_CONG_BBR $CONFIG_PATH) <(grep CONFIG_TCP_CONG_BBR ../../out/android14-6.1/common/defconfig) || { echo "Error: Configuration mismatch detected!"; exit 1; }

      - name: Build kernel
        run: |
          cd kernel_workspace
          ./kernel_platform/oplus/build/oplus_build_kernel.sh \
            ${{ github.event.inputs.CPUD }} \
            gki \
            BUILD_CONFIG=msm-kernel/build.config.gki.vendor \
            SKIP_MRPROPER=1 || { echo "Error: Kernel build failed"; exit 1; }

      - name: Package AnyKernel3
        run: |
          git clone https://github.com/Kernel-SU/AnyKernel3
          rm -rf AnyKernel3/.git
          cp kernel_workspace/kernel_platform/out/msm-kernel-${{ github.event.inputs.CPUD }}-gki/dist/Image AnyKernel3/
          echo "KernelSU Version: $KSUVER" > AnyKernel3/version-info

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Kernel_${{ github.event.inputs.FEIL }}_${{ env.KSUVER }}
          path: |
            AnyKernel3/*
            kernel_workspace/kernel_platform/out/msm-kernel-${{ github.event.inputs.CPUD }}-gki/dist/Image
